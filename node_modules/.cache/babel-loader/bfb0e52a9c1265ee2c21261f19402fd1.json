{"ast":null,"code":"import _objectWithoutProperties from \"/home/giuser/Desktop/Chatbot_Dom/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"/home/giuser/Desktop/Chatbot_Dom/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/giuser/Desktop/Chatbot_Dom/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/giuser/Desktop/Chatbot_Dom/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/giuser/Desktop/Chatbot_Dom/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/giuser/Desktop/Chatbot_Dom/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/giuser/Desktop/Chatbot_Dom/src/slider.js\";\nimport React from 'react';\nimport ChatBot from 'react-simple-chatbot';\nimport Slider from 'rc-slider';\nimport Tooltip from 'rc-tooltip';\nimport 'rc-slider/assets/index.css';\nimport './styles.css'; // const handle = (props) => {\n//     const { value, dragging, index, ...restProps } = props;\n//     return (\n//       <Tooltip\n//         prefixCls=\"rc-slider-tooltip\"\n//         overlay={value}\n//         visible={dragging}\n//         placement=\"top\"\n//         key={index}\n//       >\n//         <Handle value={value} {...restProps} />\n//       </Tooltip>\n//     );\n//   };\n\nvar createSliderWithTooltip = Slider.createSliderWithTooltip;\nvar Range = createSliderWithTooltip(Slider.Range);\nvar Handle = Slider.Handle;\n\nvar Sliders =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Sliders, _React$Component);\n\n  function Sliders(props) {\n    var _this;\n\n    _classCallCheck(this, Sliders);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Sliders).call(this, props));\n    _this.state = {\n      rangeSliderValue: 0,\n      answerVisible: false\n    };\n    return _this;\n  }\n\n  _createClass(Sliders, [{\n    key: \"handleSlider\",\n    value: function handleSlider(evt) {\n      var value = evt.value,\n          dragging = evt.dragging,\n          index = evt.index,\n          restProps = _objectWithoutProperties(evt, [\"value\", \"dragging\", \"index\"]);\n\n      return React.createElement(Tooltip, {\n        prefixCls: \"rc-slider-tooltip\",\n        overlay: value,\n        visible: dragging,\n        placement: \"top\",\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(Handle, Object.assign({\n        value: value\n      }, restProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      })));\n    }\n  }, {\n    key: \"updateaSliderValue\",\n    value: function updateaSliderValue(evt) {\n      this.setState({\n        rangeSliderValue: evt\n      });\n    }\n  }, {\n    key: \"handleAnswer\",\n    value: function handleAnswer() {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      console.log(this.props);\n      var options = this.props.options.split(\",\");\n      console.log(options);\n      return React.createElement(\"div\", {\n        className: \"Rangeslider\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, this.state.answerVisible ? \"yes\" : React.createElement(\"div\", {\n        className: \"rangeSliderinnerwrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"rsc-ts rsc-ts-bot sc-dnqmqq efROPc\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"rsc-ts-image-container sc-htoDjs vmYlS\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"rsc-ts-image sc-gzVnrw cwuCQv\",\n        src: \"/static/media/BOT.88123695.png\",\n        alt: \"avatar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"rsc-ts-bubble sc-bZQynM hQsUiY\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(Slider, {\n        min: Number(options[0]),\n        max: Number(options[options.length - 1]),\n        defaultValue: 0,\n        value: this.state.rangeSliderValue,\n        onChange: this.updateaSliderValue.bind(this),\n        handle: this.handleSlider.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"sliderMarker\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, options[0]), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, options[options.length - 1])), React.createElement(\"button\", {\n        onClick: function onClick() {\n          return _this2.props.triggerNextStep({\n            value: _this2.state,\n            trigger: _this2.props.nextStepIs\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"Submit\")))));\n    }\n  }]);\n\n  return Sliders;\n}(React.Component);\n\nexport default Sliders;","map":{"version":3,"sources":["/home/giuser/Desktop/Chatbot_Dom/src/slider.js"],"names":["React","ChatBot","Slider","Tooltip","createSliderWithTooltip","Range","Handle","Sliders","props","state","rangeSliderValue","answerVisible","evt","value","dragging","index","restProps","setState","console","log","options","split","Number","length","updateaSliderValue","bind","handleSlider","triggerNextStep","trigger","nextStepIs","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ChatBot from 'react-simple-chatbot';\nimport Slider from 'rc-slider';\nimport Tooltip from 'rc-tooltip';\nimport 'rc-slider/assets/index.css';\nimport './styles.css'\n// const handle = (props) => {\n//     const { value, dragging, index, ...restProps } = props;\n//     return (\n//       <Tooltip\n//         prefixCls=\"rc-slider-tooltip\"\n//         overlay={value}\n//         visible={dragging}\n//         placement=\"top\"\n//         key={index}\n//       >\n//         <Handle value={value} {...restProps} />\n//       </Tooltip>\n//     );\n//   };\n\nconst createSliderWithTooltip = Slider.createSliderWithTooltip;\nconst Range = createSliderWithTooltip(Slider.Range);\nconst Handle = Slider.Handle;\n\nclass Sliders extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            rangeSliderValue: 0,\n            answerVisible: false\n        }\n    }\n    handleSlider(evt) {\n        const { value, dragging, index, ...restProps } = evt;\n\n        return (\n            <Tooltip\n                prefixCls=\"rc-slider-tooltip\"\n                overlay={value}\n                visible={dragging}\n                placement=\"top\"\n                key={index}\n            >\n                <Handle value={value} {...restProps} />\n            </Tooltip>\n        );\n    }\n\n    updateaSliderValue(evt) {\n        this.setState({ rangeSliderValue: evt })\n    }\n\n    handleAnswer() {\n\n    }\n\n    render() {\n        console.log(this.props)\n        let options = this.props.options.split(\",\")\n        console.log(options)\n\n\n        return (\n            <div className=\"Rangeslider\">\n                {this.state.answerVisible ? \"yes\" :\n                    <div className=\"rangeSliderinnerwrapper\">\n                        <div className=\"rsc-ts rsc-ts-bot sc-dnqmqq efROPc\">\n                            <div className=\"rsc-ts-image-container sc-htoDjs vmYlS\">\n                                <img className=\"rsc-ts-image sc-gzVnrw cwuCQv\" src=\"/static/media/BOT.88123695.png\" alt=\"avatar\" />\n                            </div>\n                            <div className=\"rsc-ts-bubble sc-bZQynM hQsUiY\">\n                                <Slider min={Number(options[0])} max={Number(options[options.length - 1])}\n                                    defaultValue={0}\n                                    value={this.state.rangeSliderValue}\n                                    onChange={this.updateaSliderValue.bind(this)}\n                                    handle={this.handleSlider.bind(this)} />\n                                <div className=\"sliderMarker\">\n                                    <span>{options[0]}</span>\n                                    <span>{options[options.length - 1]}</span>\n                                </div>\n\n                                <button onClick={() => this.props.triggerNextStep({ value: this.state, trigger: this.props.nextStepIs })}>\n                                    Submit\n                        </button>\n                            </div>\n                        </div>\n\n                    </div>\n                }\n            </div>\n        );\n    }\n\n}\n\nexport default Sliders;\n"]},"metadata":{},"sourceType":"module"}